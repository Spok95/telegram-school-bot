name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      # Жестко используем установленный actions/setup-go,
      # чтобы не подтягивался другой toolchain
      GOTOOLCHAIN: local

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # >>> СТАВИМ GO СРАЗУ, ДО ЛЮБЫХ go-команд
      - name: Set up Go 1.24.9
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.9"
          check-latest: true
          cache: true
          cache-dependency-path: |
            go.sum

      - name: Show Go env
        run: |
          go version
          go env GOTOOLCHAIN GOROOT GOPATH

      # Если go.sum не закоммичен, job упадёт дальше.
      # На всякий случай подчистим и синхронизируем модули (но лучше закоммитить go.sum в репо).
      - name: Tidy modules (fails on diff)
        run: |
          go mod tidy
          git diff --exit-code go.mod go.sum || (echo "::warning::go.mod/go.sum changed — commit them locally"; exit 1)

      - name: Download modules
        run: go mod download

        # ---- Lint ----
      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64.5         # свежая версия с поддержкой Go 1.24
          install-mode: goinstall  # <— собрать линтер текущей Go (1.24.9)
          args: >
            --timeout=4m
            ./...

      # ---- Tests ----
      # Тесты запускаем с тегом testutil, если в проекте он используется; убери строку -tags если не нужен
      - name: Test
        run: go test -tags testutil ./...

      # ---- Build (быстрый sanity) ----
      - name: Build
        run: go build ./...

      # ---- Govulncheck (исключаем dev/testcontainers по умолчанию — без тега) ----
      - name: Govulncheck
        run: |
          go run golang.org/x/vuln/cmd/govulncheck@latest ./...
