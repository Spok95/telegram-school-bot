package handlers

import (
	"database/sql"
	"errors"
	"fmt"
	"github.com/Spok95/telegram-school-bot/internal/db"
	"github.com/Spok95/telegram-school-bot/internal/models"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"log"
	"os"
	"strconv"
)

func HandleStart(bot *tgbotapi.BotAPI, database *sql.DB, msg *tgbotapi.Message) {
	telegramID := msg.From.ID

	// –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
	user, err := db.GetUserByTelegramID(database, telegramID)
	if errors.Is(err, sql.ErrNoRows) {
		// –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî —Å–æ–∑–¥–∞—ë–º –µ–≥–æ —Å –≤–æ–∑–º–æ–∂–Ω–æ–π —Ä–æ–ª—å—é admin –∏–∑ .env
		role := ""
		if os.Getenv("ADMIN_ID") == strconv.FormatInt(telegramID, 10) {
			role = "admin"
		}

		err = db.SetUserRole(database, telegramID, msg.From.FirstName, models.Role(role))
		if err != nil {
			log.Println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", err)
			sendText(bot, msg.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
			return
		}

		// –ü–æ–≤—Ç–æ—Ä–Ω–æ —á–∏—Ç–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		user, err = db.GetUserByTelegramID(database, telegramID)
		if err != nil {
			log.Println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", err)
			sendText(bot, msg.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
			return
		}
	} else if err != nil {
		log.Println("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", err)
		sendText(bot, msg.Chat.ID, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
		return
	}

	// –ï—Å–ª–∏ —Ä–æ–ª—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ ‚Äî –ø—Ä–æ—Å–∏–º –≤—ã–±—Ä–∞—Ç—å
	if user.Role == nil || *user.Role == "" {
		StartFSM(bot, database, msg)
		return
	}

	text := fmt.Sprintf("üëã –ü—Ä–∏–≤–µ—Ç, %s !\n–í–∞—à–∞ —Ä–æ–ª—å: %s", user.Name, *user.Role)

	// –ú–µ–Ω—é –ø–æ —Ä–æ–ª—è–º
	var keyboard tgbotapi.ReplyKeyboardMarkup
	switch *user.Role {
	case "student":
		keyboard = studentMenu()
	case "teacher":
		keyboard = teacherMenu()
	case "parent":
		keyboard = parentMenu()
	case "admin":
		keyboard = adminMenu()
	default:
		msgOut := tgbotapi.NewMessage(msg.Chat.ID, text)
		msgOut.ReplyMarkup = tgbotapi.ReplyKeyboardRemove{RemoveKeyboard: true}
		bot.Send(msgOut)
		return
	}

	msgOut := tgbotapi.NewMessage(msg.Chat.ID, text)
	msgOut.ReplyMarkup = keyboard
	bot.Send(msgOut)
}

func sendText(bot *tgbotapi.BotAPI, chatID int64, text string) {
	msg := tgbotapi.NewMessage(chatID, text)
	bot.Send(msg)
}

func studentMenu() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üìä –ú–æ–π —Ä–µ–π—Ç–∏–Ω–≥"),
		),
	)
}

func teacherMenu() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("‚ûï –ù–∞—á–∏—Å–ª–∏—Ç—å –±–∞–ª–ª—ã"),
			tgbotapi.NewKeyboardButton("üìâ –°–ø–∏—Å–∞—Ç—å –±–∞–ª–ª—ã"),
		),
	)
}

func adminMenu() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("‚ûï –ù–∞—á–∏—Å–ª–∏—Ç—å –±–∞–ª–ª—ã"),
			tgbotapi.NewKeyboardButton("üìâ –°–ø–∏—Å–∞—Ç—å –±–∞–ª–ª—ã"),
			tgbotapi.NewKeyboardButton("üì• –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–∞—á–∏—Å–ª–µ–Ω–∏–µ"),
			tgbotapi.NewKeyboardButton("üìâ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–ø–∏—Å–∞–Ω–∏—è"),
			tgbotapi.NewKeyboardButton("üìä –û—Ç—á—ë—Ç—ã"),
		),
	)
}

func parentMenu() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üìä –†–µ–π—Ç–∏–Ω–≥ —Ä–µ–±—ë–Ω–∫–∞"),
		),
	)
}
